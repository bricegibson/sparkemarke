<!DOCTYPE html>
<html>
<head>
  <title>Grade Manager - SparkeMarke</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

  <style>
    #studentSection {
      opacity: 0;
      transition: opacity 0.6s ease-in;
    }
    #studentSection.visible {
      opacity: 1;
    }
    .leaderboard-card {
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      background: white;
      padding: 1rem;
      margin-bottom: 2rem;
    }
    body {
      max-width: 95%;
      margin: 0 auto;
      background-color: #f8f9fa;
    }
  </style>

</head>
<body class="container mt-5">

  <h1 class="mb-4 text-center">Welcome to SparkeMarke!</h1>

  <!-- Code Entry -->
  <form id="codeForm" class="mb-4">
    <div class="mb-3">
      <label for="code" class="form-label">Enter Code</label>
      <input type="text" id="code" name="code" maxlength="5" required class="form-control" placeholder="ABCDE">
    </div>
    <button type="submit" class="btn btn-primary">Check Code</button>

    <!-- Spinner -->
    <div id="spinner" class="mt-3 text-center" style="display: none;">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Checking...</span>
      </div>
      <p class="mt-2">Verifying code...</p>
    </div>
  </form>

  <div id="message" class="mt-3"></div>

  <!-- Student Selection -->
  <div id="studentSection" class="mb-4" style="display:none;">
    <form action="/student-login" method="POST">
      <input type="hidden" name="teacherId" id="teacherId">
      <input type="hidden" name="code" id="codeHidden"> 

      <div class="mb-3">
        <label for="studentId" class="form-label">Select Your Name</label>
        <select name="studentId" id="studentId" required class="form-select">
          <option value="">-- choose a student --</option>
        </select>
      </div>

      <button type="submit" class="btn btn-success">Continue</button>
    </form>
  </div>

  <div id="message" class="mt-3 text-danger"></div>

<hr class="my-4">

  <!-- üèÜ Leaderboards Section -->
  <div id="leaderboardSection" style="display:none;">
    <h3 class="mb-3 text-center">üèÜ Subject Leaderboards</h3>

    <% if (!leaderboards || Object.keys(leaderboards).length === 0) { %>
      <p class="text-muted text-center">No leaderboard data available yet.</p>
    <% } else { %>
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <% Object.keys(leaderboards).forEach(subjectName => { %>
          <div class="col">
            <div class="leaderboard-card" data-subject="<%= subjectName %>">
              <h5 class="text-center mb-3"><%= subjectName %></h5>
              <table class="table table-sm table-bordered mb-0 align-middle">
                <thead class="table-light">
                  <tr>
                    <th>Rank</th><th>Student</th><th>School</th><th>Avg</th>
                  </tr>
                </thead>
                <tbody>
                  <% leaderboards[subjectName].forEach((row, index) => { %>
                    <tr>
                      <td><%= index + 1 %></td>
                      <td><%= row.studentName %></td>
                      <td><%= row.schoolName %></td>
                      <td><%= row.avgScore.toFixed(2) %>%</td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        <% }) %>
      </div>
    <% } %>
  </div>


  <script>
    const spinner = document.getElementById("spinner");
    const messageDiv = document.getElementById("message");
    const studentSection = document.getElementById("studentSection");
    studentSection.classList.remove("visible");
    
    document.getElementById("codeForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const code = document.getElementById("code").value.trim().toUpperCase();
      messageDiv.textContent = "";
      spinner.style.display = "block";
      studentSection.style.display = "none";

      try {
        
        const res = await fetch("/api/check-code", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: new URLSearchParams({ code }),
        });

        const data = await res.json();
        spinner.style.display = "none";

        if (!data.valid) {
          document.getElementById("leaderboardSection").style.display = "none";
          messageDiv.className = "mt-3 text-danger fw-bold";
          messageDiv.textContent = data.message || "Invalid code.";
          return;
        }

        // Success
        messageDiv.className = "mt-3 text-success fw-bold";
        messageDiv.innerHTML = `‚úÖ Code verified for <strong>${data.teacherName || "your teacher"}'s</strong> class.`;

        // Populate dropdown
        const select = document.getElementById("studentId");
        select.innerHTML = '<option value="">-- choose a student --</option>';
        data.students.forEach(s => {
          const opt = document.createElement("option");
          opt.value = s.studentID;
          opt.textContent = s.studentName;
          select.appendChild(opt);
        });

        // Store teacherId + code
        document.getElementById("teacherId").value = data.teacherId;
        document.getElementById("codeHidden").value = code;

        studentSection.style.display = "block";
        setTimeout(() => studentSection.classList.add("visible"), 50);

        // ‚úÖ Show leaderboard section
        document.getElementById("leaderboardSection").style.display = "block";

      } catch (err) {
        spinner.style.display = "none";
        messageDiv.className = "mt-3 text-danger fw-bold";
        messageDiv.textContent = "Server error. Please try again.";
        console.error(err);
      }
    });
  </script>

  <script>
    const subjectColors = {
      math:    "rgba(255, 99, 132, 0.15)",
      science: "rgba(54, 162, 235, 0.15)",
      fluency: "rgba(255, 206, 86, 0.25)",
      history: "rgba(75, 192, 192, 0.2)",
      art:     "rgba(153, 102, 255, 0.15)",
      default: "rgba(201, 203, 207, 0.2)"
    };

    const headerColors = {
      // math:    "rgba(255, 99, 132, 0.4)",
      // science: "rgba(54, 162, 235, 0.4)",
      // fluency: "rgba(255, 206, 86, 0.6)",
      // history: "rgba(75, 192, 192, 0.5)",
      // art:     "rgba(153, 102, 255, 0.4)",
      default: "rgba(0, 0, 0, 1)"
    };

    document.querySelectorAll(".leaderboard-card").forEach(card => {
      // Try data-subject first
      let subjectRaw = card.getAttribute("data-subject");

      // Fallback: read from the <h5> title if attribute is missing
      if (!subjectRaw || subjectRaw.trim() === "") {
        const h5 = card.querySelector("h5");
        subjectRaw = h5 ? h5.textContent : "";
      }

      const key = (subjectRaw || "").trim().toLowerCase();
      const bgColor = subjectColors[key] || subjectColors.default;
      const headColor = headerColors[key] || headerColors.default;

      // Card background tint
      card.style.backgroundColor = bgColor;

      // Table header accent
      const thead = card.querySelector("thead");
      if (thead) thead.style.backgroundColor = headColor;
    });

  </script>


</body>
</html>
