<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Student Stats</title>

  <!-- Bootstrap -->
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
  >

  <!-- Chart.js for line graphs -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- Plotly for box plots -->
  <script src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>

    <style>
    canvas {
        width: 100% !important;
    }
    .card {
        border-radius: 10px;
    }
    </style>

    <script>
    // Consistent color palette per subject
    const subjectColors = {
        Math: "rgba(255, 99, 132, 1)",        // red
        Science: "rgba(54, 162, 235, 1)",     // blue
        Reading: "rgba(255, 206, 86, 1)",     // yellow
        History: "rgba(75, 192, 192, 1)",     // teal
        Art: "rgba(153, 102, 255, 1)",        // purple
        Default: "rgba(201, 203, 207, 1)"     // gray
    };
    </script>

</head>

<body class="container mt-4">

  <!-- HEADER -->
  <div class="d-flex justify-content-between align-items-center mb-4 border-bottom pb-2">
    <div>
      <h3><%= studentInfo.studentName %></h3>
      <p class="mb-0 text-muted">
        <%= studentInfo.schoolName %> &middot; Teacher: <%= studentInfo.teacherName %>
      </p>
      <p class="small text-secondary mb-0">
        Date:
        <%= new Date().toLocaleDateString('en-US', {
          month: 'short',
          day: 'numeric',
          year: 'numeric'
        }) %>
      </p>
    </div>

    <div>
      <a href="/entry/<%= studentInfo.studentID %>" class="btn btn-outline-primary me-2">Back to Entry</a>
      <a href="/" class="btn btn-outline-danger">Exit</a>
    </div>
  </div>

  <!-- PERFORMANCE OVERVIEW -->
  <h2 class="mb-3">Performance Overview by Subject</h2>
  <% if (subjectChanges && subjectChanges.length > 0) { %>
    <ul class="list-group mb-5">
      <% subjectChanges.forEach(sub => { %>
        <li class="list-group-item d-flex justify-content-between align-items-center">
          <strong><%= sub.subjectName %></strong>
          <% if (sub.direction === "improved") { %>
            <span class="text-success">Improved by <%= sub.change %>%</span>
          <% } else if (sub.direction === "declined") { %>
            <span class="text-danger">Declined by <%= Math.abs(sub.change) %>%</span>
          <% } else { %>
            <span class="text-muted">No change</span>
          <% } %>
        </li>
      <% }) %>
    </ul>
  <% } else { %>
    <p class="text-muted"><%= message || "No improvement data yet." %></p>
  <% } %>

  <!-- LINE GRAPHS -->
    <h2 class="mb-3">Subject Progress Charts</h2>

    <% if (graphs && graphs.length > 0) { %>
    <div class="row">
        <% graphs.forEach((g, idx) => { %>
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm p-3">
            <h5 class="text-center"><%= g.subjectName %></h5>
            <canvas id="chart_<%= idx %>" height="150"></canvas>
            </div>
        </div>
        <% if ((idx + 1) % 2 === 0) { %>
            </div><div class="row">
        <% } %>
        <% }) %>
    </div>
    <% } else { %>
    <p class="text-muted">No chart data available yet.</p>
    <% } %>


    <script>
    <% graphs.forEach((g, idx) => { %>
        const ctx<%= idx %> = document.getElementById("chart_<%= idx %>").getContext("2d");

        // Format date labels to 'MMM-DD'
        const formattedDates_<%= idx %> = <%- JSON.stringify(g.dates) %>.map(dateStr => {
        const date = new Date(dateStr);
        return date.toLocaleDateString('en-US', { month: 'short', day: '2-digit' });
        });

        const color_<%= idx %> = subjectColors["<%= g.subjectName %>"] || subjectColors.Default;

        new Chart(ctx<%= idx %>, {
        type: "line",
        data: {
            labels: formattedDates_<%= idx %>,
            datasets: [{
            label: "<%= g.subjectName %>",
            data: <%- JSON.stringify(g.scores) %>,
            fill: false,
            borderColor: color_<%= idx %>,
            borderWidth: 2,
            tension: 0.3,
            pointRadius: 4,
            pointBackgroundColor: color_<%= idx %>
            }]
        },
        options: {
            responsive: true,
            scales: {
            y: {
                beginAtZero: true,
                max: 100,
                title: { display: true, text: "Score (%)" }
            },
            x: {
                title: { display: false },
                ticks: {
                autoSkip: true,
                maxTicksLimit: 8
                }
            }
            },
            plugins: { legend: { display: false } }
        }
        });
    <% }) %>
    </script>


    <!-- BOX PLOTS -->
<h2 class="mb-3 mt-5">Class Comparison (Box Plots)</h2>

<% if (boxPlots && boxPlots.length > 0) { %>
  <div class="row">
    <% boxPlots.forEach((b, idx) => { %>
      <div class="col-md-3 mb-4">
        <div class="card shadow-sm p-3">
          <h6 class="text-center"><%= b.subjectName %></h6>
          <div id="box_<%= idx %>" style="height:250px;"></div>
        </div>
      </div>
      <% if ((idx + 1) % 4 === 0) { %>
        </div><div class="row">
      <% } %>
    <% }) %>
  </div>
<% } else { %>
  <p class="text-muted">No class comparison data available yet.</p>
<% } %>


    <script>
    <% boxPlots.forEach((b, idx) => { %>
        const scores_<%= idx %> = <%- JSON.stringify(b.allScores || []) %>;
        const avg_<%= idx %> = <%= b.studentAvg || 0 %>;

        //console.log("Subject:", "<%= b.subjectName %>", "Scores:", scores_<%= idx %>);

        //const color_<%= idx %> = subjectColors["<%= b.subjectName %>"] || subjectColors.Default;

        const boxTrace_<%= idx %> = {
        type: "box",
        y: scores_<%= idx %>,
        name: "<%= b.subjectName %>",
        boxmean: false,
        fillcolor: color_<%= idx %>.replace('1)', '0.3)'), // semi-transparent fill
        line: { color: color_<%= idx %> },
        marker: { opacity: 0.6 }
        };

        const avgTrace_<%= idx %> = {
        type: "scatter",
        mode: "markers",
        name: "Your Avg",
        x: ["<%= b.subjectName %>"],
        y: [avg_<%= idx %>],
        marker: { size: 10, color: "red" },
        hovertemplate: "%{y:.0f}%<extra>Your Avg</extra>"
        };


        const layout_<%= idx %> = {
        margin: { t: 10, r: 10, b: 50, l: 50 },
        yaxis: { range: [0, 100], title: "Score (%)" },
        boxmode: "group",
        showlegend: false
        };

        Plotly.newPlot("box_<%= idx %>", [boxTrace_<%= idx %>, avgTrace_<%= idx %>], layout_<%= idx %>, { responsive: true });
    <% }) %>
    </script>

</body>
</html>
